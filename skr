#!/usr/bin/env python3
import os
import sys
import subprocess


def init():

    if len(configFiles) > 0:
        print("Config file exist")
        exit()
    else:
        print("Generating config file at ~/.config/skr/skr.config")
        print("press a key to identify your keyboard")

        if os.getuid() == 0:
            print('"skr --init" must not be run as root')
            exit()
        if os.system("mkdir -p ~/.config/skr") == -1:
            print("can't create ~/.config/skr")
            exit()

        if os.system("touch ~/.config/skr/skr.config") == -1:
            print("can't create ~/.config/skr/skr.config")
            exit()

        os.system("sudo echo ")
        output = subprocess.run(["sudo","/usr/share/skr/skrkid"],
                stdout=subprocess.PIPE)
        input()
        output = output.stdout.decode('utf-8').split("\n")
        output = list(filter(lambda x: x != "",output))

        keyboard = ""
        if len(output) == 1:
            keyboard = output[0]
            print("Your keyboard path is:",keyboard)
        else:
            print("No keyboard found")
            sys.exit()

        # create config file

        configFile = open(skrConfigPath+"/skr.config","a")

        configFile.write("# Auto gen SKR config file\n")
        configFile.write("# The keyboard that skr will intercept\n")
        configFile.write("KeyboardPath -> "+keyboard+"\n")
        configFile.write("\n")
        configFile.write("# Get a config examples and source code at:\n")
        configFile.write("#   https://github.com/davrack/skr\n")

        configFile.close()
        exit()

skrConfigPath = os.path.expanduser("~/.config/skr")
configFiles = list(filter(
        lambda File: File.endswith(".config"),
        os.listdir(skrConfigPath)))

if len(sys.argv) == 2:
    if sys.argv[1] == "--init":
        init()
    elif sys.argv[1] == "-h":
        print("skr help")

if len(sys.argv) == 1:
    # create an instance of skrCore for each config file in ~/.config/skr/

    for configFile in configFiles:
        subprocess.run(
                ["/usr/share/skr/skrcore",skrConfigPath+"/"+configFile])
